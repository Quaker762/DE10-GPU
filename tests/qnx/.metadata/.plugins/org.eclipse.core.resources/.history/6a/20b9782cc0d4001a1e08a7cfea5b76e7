/**
 * Bitmap Test for DE10 GPU
 *
 * Jesse Buhagiar 02/08/2020
 */

#include "bitmap.h"
#include <iostream>
#include <sys/mman.h>
#include <fcntl.h>

static constexpr int FRAMEBUFFER_WIDTH  = 640;
static constexpr int FRAMEBUFFER_HEIGHT = 480;

#define FRAMEBUFFER_ADDR 0x38000000

int main() {
	CMSBitmap bitmap("/fs/test.bmp");

	//for(int i = 0; i < (bitmap.width() * bitmap.height()); i++)
	//{
	//	std::printf("0x%x\n", *reinterpret_cast<const uint32_t*>(bitmap.pixel_data() + i));
	//}

	int memfile = open("/dev/mem", O_RDWR | O_SYNC);
	std::printf("test1\n");
	if(!memfile)
	{
		std::printf("Failed to open a handle to /dev/mem!\n");
		return -1;
	}

	std::printf("test2\n");

	// Now let's map the framebuffer to a pointer that we can write to
	void* fb = mmap(reinterpret_cast<void*>(FRAMEBUFFER_ADDR), FRAMEBUFFER_WIDTH * FRAMEBUFFER_HEIGHT * 4, PROT_READ | PROT_WRITE, MAP_PRIVATE, memfile, 0);

	*reinterpret_cast<uint32_t*>(fb) = 0xcafebabe;
	std::printf("here!\n");

	return 0;
}
