|Rush3dNano
FPGA_CLK1_50 => FPGA_CLK1_50.IN1
SW[0] => SW[0].IN1
SW[1] => SW[1].IN1
SW[2] => SW[2].IN1
SW[3] => SW[3].IN1
reset_KEY0 => reset_KEY0.IN3
start_KEY1 => start_KEY1.IN1
I2C_SDA <> I2C:startConfig.sda_flag
I2C_SCL << I2C:startConfig.scl_flag
HDMI_TX[0] << <GND>
HDMI_TX[1] << <GND>
HDMI_TX[2] << <GND>
HDMI_TX[3] << <GND>
HDMI_TX[4] << <GND>
HDMI_TX[5] << <GND>
HDMI_TX[6] << <GND>
HDMI_TX[7] << <GND>
HDMI_TX[8] << <GND>
HDMI_TX[9] << <GND>
HDMI_TX[10] << <GND>
HDMI_TX[11] << <GND>
HDMI_TX[12] << <GND>
HDMI_TX[13] << <GND>
HDMI_TX[14] << <GND>
HDMI_TX[15] << <GND>
HDMI_TX[16] << <VCC>
HDMI_TX[17] << <VCC>
HDMI_TX[18] << <VCC>
HDMI_TX[19] << <VCC>
HDMI_TX[20] << <VCC>
HDMI_TX[21] << <VCC>
HDMI_TX[22] << <VCC>
HDMI_TX[23] << <VCC>
HDMI_TX_HS << HdmiOutput:HdmiOutput.horizontal_sync
HDMI_TX_VS << HdmiOutput:HdmiOutput.vertical_sync
HDMI_TX_DE << HdmiOutput:HdmiOutput.data_enable
HDMI_TX_CLK << HdmiOutput:HdmiOutput.pixel_clock


|Rush3dNano|PLL:systemClockToPixel
refclk => refclk.IN1
rst => rst.IN1
outclk_0 <= PLL_0002:pll_inst.outclk_0
outclk_1 <= PLL_0002:pll_inst.outclk_1
outclk_2 <= PLL_0002:pll_inst.outclk_2
outclk_3 <= PLL_0002:pll_inst.outclk_3


|Rush3dNano|PLL:systemClockToPixel|PLL_0002:pll_inst
refclk => refclk.IN1
rst => rst.IN1
outclk_0 <= altera_pll:altera_pll_i.outclk
outclk_1 <= altera_pll:altera_pll_i.outclk
outclk_2 <= altera_pll:altera_pll_i.outclk
outclk_3 <= altera_pll:altera_pll_i.outclk
locked <= altera_pll:altera_pll_i.locked


|Rush3dNano|PLL:systemClockToPixel|PLL_0002:pll_inst|altera_pll:altera_pll_i
refclk => general[0].gpll.I_REFCLK
refclk => general[1].gpll.I_REFCLK
refclk => general[2].gpll.I_REFCLK
refclk => general[3].gpll.I_REFCLK
refclk1 => ~NO_FANOUT~
fbclk => ~NO_FANOUT~
rst => general[0].gpll.I_RST
rst => general[1].gpll.I_RST
rst => general[2].gpll.I_RST
rst => general[3].gpll.I_RST
phase_en => ~NO_FANOUT~
updn => ~NO_FANOUT~
num_phase_shifts[0] => ~NO_FANOUT~
num_phase_shifts[1] => ~NO_FANOUT~
num_phase_shifts[2] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
cntsel[0] => ~NO_FANOUT~
cntsel[1] => ~NO_FANOUT~
cntsel[2] => ~NO_FANOUT~
cntsel[3] => ~NO_FANOUT~
cntsel[4] => ~NO_FANOUT~
reconfig_to_pll[0] => ~NO_FANOUT~
reconfig_to_pll[1] => ~NO_FANOUT~
reconfig_to_pll[2] => ~NO_FANOUT~
reconfig_to_pll[3] => ~NO_FANOUT~
reconfig_to_pll[4] => ~NO_FANOUT~
reconfig_to_pll[5] => ~NO_FANOUT~
reconfig_to_pll[6] => ~NO_FANOUT~
reconfig_to_pll[7] => ~NO_FANOUT~
reconfig_to_pll[8] => ~NO_FANOUT~
reconfig_to_pll[9] => ~NO_FANOUT~
reconfig_to_pll[10] => ~NO_FANOUT~
reconfig_to_pll[11] => ~NO_FANOUT~
reconfig_to_pll[12] => ~NO_FANOUT~
reconfig_to_pll[13] => ~NO_FANOUT~
reconfig_to_pll[14] => ~NO_FANOUT~
reconfig_to_pll[15] => ~NO_FANOUT~
reconfig_to_pll[16] => ~NO_FANOUT~
reconfig_to_pll[17] => ~NO_FANOUT~
reconfig_to_pll[18] => ~NO_FANOUT~
reconfig_to_pll[19] => ~NO_FANOUT~
reconfig_to_pll[20] => ~NO_FANOUT~
reconfig_to_pll[21] => ~NO_FANOUT~
reconfig_to_pll[22] => ~NO_FANOUT~
reconfig_to_pll[23] => ~NO_FANOUT~
reconfig_to_pll[24] => ~NO_FANOUT~
reconfig_to_pll[25] => ~NO_FANOUT~
reconfig_to_pll[26] => ~NO_FANOUT~
reconfig_to_pll[27] => ~NO_FANOUT~
reconfig_to_pll[28] => ~NO_FANOUT~
reconfig_to_pll[29] => ~NO_FANOUT~
reconfig_to_pll[30] => ~NO_FANOUT~
reconfig_to_pll[31] => ~NO_FANOUT~
reconfig_to_pll[32] => ~NO_FANOUT~
reconfig_to_pll[33] => ~NO_FANOUT~
reconfig_to_pll[34] => ~NO_FANOUT~
reconfig_to_pll[35] => ~NO_FANOUT~
reconfig_to_pll[36] => ~NO_FANOUT~
reconfig_to_pll[37] => ~NO_FANOUT~
reconfig_to_pll[38] => ~NO_FANOUT~
reconfig_to_pll[39] => ~NO_FANOUT~
reconfig_to_pll[40] => ~NO_FANOUT~
reconfig_to_pll[41] => ~NO_FANOUT~
reconfig_to_pll[42] => ~NO_FANOUT~
reconfig_to_pll[43] => ~NO_FANOUT~
reconfig_to_pll[44] => ~NO_FANOUT~
reconfig_to_pll[45] => ~NO_FANOUT~
reconfig_to_pll[46] => ~NO_FANOUT~
reconfig_to_pll[47] => ~NO_FANOUT~
reconfig_to_pll[48] => ~NO_FANOUT~
reconfig_to_pll[49] => ~NO_FANOUT~
reconfig_to_pll[50] => ~NO_FANOUT~
reconfig_to_pll[51] => ~NO_FANOUT~
reconfig_to_pll[52] => ~NO_FANOUT~
reconfig_to_pll[53] => ~NO_FANOUT~
reconfig_to_pll[54] => ~NO_FANOUT~
reconfig_to_pll[55] => ~NO_FANOUT~
reconfig_to_pll[56] => ~NO_FANOUT~
reconfig_to_pll[57] => ~NO_FANOUT~
reconfig_to_pll[58] => ~NO_FANOUT~
reconfig_to_pll[59] => ~NO_FANOUT~
reconfig_to_pll[60] => ~NO_FANOUT~
reconfig_to_pll[61] => ~NO_FANOUT~
reconfig_to_pll[62] => ~NO_FANOUT~
reconfig_to_pll[63] => ~NO_FANOUT~
extswitch => ~NO_FANOUT~
adjpllin => ~NO_FANOUT~
cclk => ~NO_FANOUT~
outclk[0] <= general[0].gpll.O_OUTCLK
outclk[1] <= general[1].gpll.O_OUTCLK
outclk[2] <= general[2].gpll.O_OUTCLK
outclk[3] <= general[3].gpll.O_OUTCLK
fboutclk <= general[0].gpll.O_FBOUTCLK
locked <= general[0].gpll.LOCKED
phase_done <= <GND>
reconfig_from_pll[0] <= <GND>
reconfig_from_pll[1] <= <GND>
reconfig_from_pll[2] <= <GND>
reconfig_from_pll[3] <= <GND>
reconfig_from_pll[4] <= <GND>
reconfig_from_pll[5] <= <GND>
reconfig_from_pll[6] <= <GND>
reconfig_from_pll[7] <= <GND>
reconfig_from_pll[8] <= <GND>
reconfig_from_pll[9] <= <GND>
reconfig_from_pll[10] <= <GND>
reconfig_from_pll[11] <= <GND>
reconfig_from_pll[12] <= <GND>
reconfig_from_pll[13] <= <GND>
reconfig_from_pll[14] <= <GND>
reconfig_from_pll[15] <= <GND>
reconfig_from_pll[16] <= <GND>
reconfig_from_pll[17] <= <GND>
reconfig_from_pll[18] <= <GND>
reconfig_from_pll[19] <= <GND>
reconfig_from_pll[20] <= <GND>
reconfig_from_pll[21] <= <GND>
reconfig_from_pll[22] <= <GND>
reconfig_from_pll[23] <= <GND>
reconfig_from_pll[24] <= <GND>
reconfig_from_pll[25] <= <GND>
reconfig_from_pll[26] <= <GND>
reconfig_from_pll[27] <= <GND>
reconfig_from_pll[28] <= <GND>
reconfig_from_pll[29] <= <GND>
reconfig_from_pll[30] <= <GND>
reconfig_from_pll[31] <= <GND>
reconfig_from_pll[32] <= <GND>
reconfig_from_pll[33] <= <GND>
reconfig_from_pll[34] <= <GND>
reconfig_from_pll[35] <= <GND>
reconfig_from_pll[36] <= <GND>
reconfig_from_pll[37] <= <GND>
reconfig_from_pll[38] <= <GND>
reconfig_from_pll[39] <= <GND>
reconfig_from_pll[40] <= <GND>
reconfig_from_pll[41] <= <GND>
reconfig_from_pll[42] <= <GND>
reconfig_from_pll[43] <= <GND>
reconfig_from_pll[44] <= <GND>
reconfig_from_pll[45] <= <GND>
reconfig_from_pll[46] <= <GND>
reconfig_from_pll[47] <= <GND>
reconfig_from_pll[48] <= <GND>
reconfig_from_pll[49] <= <GND>
reconfig_from_pll[50] <= <GND>
reconfig_from_pll[51] <= <GND>
reconfig_from_pll[52] <= <GND>
reconfig_from_pll[53] <= <GND>
reconfig_from_pll[54] <= <GND>
reconfig_from_pll[55] <= <GND>
reconfig_from_pll[56] <= <GND>
reconfig_from_pll[57] <= <GND>
reconfig_from_pll[58] <= <GND>
reconfig_from_pll[59] <= <GND>
reconfig_from_pll[60] <= <GND>
reconfig_from_pll[61] <= <GND>
reconfig_from_pll[62] <= <GND>
reconfig_from_pll[63] <= <GND>
activeclk <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
phout[0] <= <GND>
phout[1] <= <GND>
phout[2] <= <GND>
phout[3] <= <GND>
phout[4] <= <GND>
phout[5] <= <GND>
phout[6] <= <GND>
phout[7] <= <GND>
lvds_clk[0] <= <GND>
lvds_clk[1] <= <GND>
loaden[0] <= <GND>
loaden[1] <= <GND>
extclk_out[0] <= <GND>
extclk_out[1] <= <GND>
cascade_out[0] <= <GND>
cascade_out[1] <= <GND>
cascade_out[2] <= <GND>
cascade_out[3] <= <GND>
zdbfbclk <> <GND>


|Rush3dNano|FreqDivider:slowClock
inputclock => countNo[0].CLK
inputclock => countNo[1].CLK
inputclock => countNo[2].CLK
inputclock => countNo[3].CLK
inputclock => countNo[4].CLK
inputclock => countNo[5].CLK
inputclock => countNo[6].CLK
inputclock => countNo[7].CLK
inputclock => clock.CLK
clock_reset_n => clock.OUTPUTSELECT
clock_reset_n => countNo.OUTPUTSELECT
clock_reset_n => countNo.OUTPUTSELECT
clock_reset_n => countNo.OUTPUTSELECT
clock_reset_n => countNo.OUTPUTSELECT
clock_reset_n => countNo.OUTPUTSELECT
clock_reset_n => countNo.OUTPUTSELECT
clock_reset_n => countNo.OUTPUTSELECT
clock_reset_n => countNo.OUTPUTSELECT
OutputClock <= clock.DB_MAX_OUTPUT_PORT_TYPE


|Rush3dNano|I2C:startConfig
clock => scl_flag.DATAB
clock => I2CData:SerialData.clock
clock => clock_count[0].CLK
clock => clock_count[1].CLK
clock => clock_count[2].CLK
clock => clock_count[3].CLK
clock => clock_count[4].CLK
clock => clock_count[5].CLK
clock => start_flag.CLK
clock => comm_done.CLK
clock => scl_flag_raw.CLK
clock => stop_flag_raw.CLK
clock => sda_flag_raw.CLK
clock => sda_flag_raw~en.CLK
reset_n => start_flag.IN0
reset_n => clock_count[0].ACLR
reset_n => clock_count[1].ACLR
reset_n => clock_count[2].ACLR
reset_n => clock_count[3].ACLR
reset_n => clock_count[4].ACLR
reset_n => clock_count[5].ACLR
reset_n => table_count[5].IN0
reset_n => start_flag.ACLR
start_n => table_count[5].IN1
start_n => start_flag.IN1
sda_flag <> sda_flag
scl_flag <= scl_flag.DB_MAX_OUTPUT_PORT_TYPE
stop_flag <= stop_flag_raw.DB_MAX_OUTPUT_PORT_TYPE


|Rush3dNano|I2C:startConfig|I2CData:SerialData
clock => TABLE_DATA[0].CLK
clock => TABLE_DATA[1].CLK
clock => TABLE_DATA[2].CLK
clock => TABLE_DATA[3].CLK
clock => TABLE_DATA[4].CLK
clock => TABLE_DATA[5].CLK
clock => TABLE_DATA[6].CLK
clock => TABLE_DATA[7].CLK
clock => TABLE_DATA[8].CLK
clock => TABLE_DATA[9].CLK
clock => TABLE_DATA[10].CLK
clock => TABLE_DATA[11].CLK
clock => TABLE_DATA[12].CLK
clock => TABLE_DATA[13].CLK
clock => TABLE_DATA[14].CLK
clock => TABLE_DATA[15].CLK
count[0] => Decoder0.IN5
count[0] => Decoder1.IN4
count[0] => Decoder2.IN4
count[1] => Decoder0.IN4
count[1] => Decoder2.IN3
count[2] => Decoder0.IN3
count[2] => Decoder1.IN3
count[2] => Decoder2.IN2
count[3] => Decoder0.IN2
count[3] => Decoder1.IN2
count[4] => Decoder0.IN1
count[4] => Decoder1.IN1
count[4] => Decoder2.IN1
count[5] => Decoder0.IN0
count[5] => Decoder1.IN0
count[5] => Decoder2.IN0
table_data_out[0] <= TABLE_DATA[0].DB_MAX_OUTPUT_PORT_TYPE
table_data_out[1] <= TABLE_DATA[1].DB_MAX_OUTPUT_PORT_TYPE
table_data_out[2] <= TABLE_DATA[2].DB_MAX_OUTPUT_PORT_TYPE
table_data_out[3] <= TABLE_DATA[3].DB_MAX_OUTPUT_PORT_TYPE
table_data_out[4] <= TABLE_DATA[4].DB_MAX_OUTPUT_PORT_TYPE
table_data_out[5] <= TABLE_DATA[5].DB_MAX_OUTPUT_PORT_TYPE
table_data_out[6] <= TABLE_DATA[6].DB_MAX_OUTPUT_PORT_TYPE
table_data_out[7] <= TABLE_DATA[7].DB_MAX_OUTPUT_PORT_TYPE
table_data_out[8] <= TABLE_DATA[8].DB_MAX_OUTPUT_PORT_TYPE
table_data_out[9] <= TABLE_DATA[9].DB_MAX_OUTPUT_PORT_TYPE
table_data_out[10] <= TABLE_DATA[10].DB_MAX_OUTPUT_PORT_TYPE
table_data_out[11] <= TABLE_DATA[11].DB_MAX_OUTPUT_PORT_TYPE
table_data_out[12] <= TABLE_DATA[12].DB_MAX_OUTPUT_PORT_TYPE
table_data_out[13] <= TABLE_DATA[13].DB_MAX_OUTPUT_PORT_TYPE
table_data_out[14] <= TABLE_DATA[14].DB_MAX_OUTPUT_PORT_TYPE
table_data_out[15] <= TABLE_DATA[15].DB_MAX_OUTPUT_PORT_TYPE
table_data_out[16] <= <GND>
table_data_out[17] <= <VCC>
table_data_out[18] <= <GND>
table_data_out[19] <= <GND>
table_data_out[20] <= <VCC>
table_data_out[21] <= <VCC>
table_data_out[22] <= <VCC>
table_data_out[23] <= <GND>


|Rush3dNano|HdmiOutput:HdmiOutput
clock_480p => ~NO_FANOUT~
clock_768p => ~NO_FANOUT~
clock_1080p => hdmi_active.CLK
clock_1080p => vertical_sync~reg0.CLK
clock_1080p => horizontal_sync~reg0.CLK
clock_1080p => ver_pixel_count[0].CLK
clock_1080p => ver_pixel_count[1].CLK
clock_1080p => ver_pixel_count[2].CLK
clock_1080p => ver_pixel_count[3].CLK
clock_1080p => ver_pixel_count[4].CLK
clock_1080p => ver_pixel_count[5].CLK
clock_1080p => ver_pixel_count[6].CLK
clock_1080p => ver_pixel_count[7].CLK
clock_1080p => ver_pixel_count[8].CLK
clock_1080p => ver_pixel_count[9].CLK
clock_1080p => ver_pixel_count[10].CLK
clock_1080p => ver_pixel_count[11].CLK
clock_1080p => hor_pixel_count[0].CLK
clock_1080p => hor_pixel_count[1].CLK
clock_1080p => hor_pixel_count[2].CLK
clock_1080p => hor_pixel_count[3].CLK
clock_1080p => hor_pixel_count[4].CLK
clock_1080p => hor_pixel_count[5].CLK
clock_1080p => hor_pixel_count[6].CLK
clock_1080p => hor_pixel_count[7].CLK
clock_1080p => hor_pixel_count[8].CLK
clock_1080p => hor_pixel_count[9].CLK
clock_1080p => hor_pixel_count[10].CLK
clock_1080p => hor_pixel_count[11].CLK
clock_1080p => pixel_clock.DATAIN
reset => hor_pixel_count[0].ACLR
reset => hor_pixel_count[1].ACLR
reset => hor_pixel_count[2].ACLR
reset => hor_pixel_count[3].ACLR
reset => hor_pixel_count[4].ACLR
reset => hor_pixel_count[5].ACLR
reset => hor_pixel_count[6].ACLR
reset => hor_pixel_count[7].ACLR
reset => hor_pixel_count[8].ACLR
reset => hor_pixel_count[9].ACLR
reset => hor_pixel_count[10].ACLR
reset => hor_pixel_count[11].ACLR
reset => horizontal_sync~reg0.ACLR
reset => vertical_sync~reg0.ACLR
reset => hdmi_active.ACLR
reset => ver_pixel_count[0].ACLR
reset => ver_pixel_count[1].ACLR
reset => ver_pixel_count[2].ACLR
reset => ver_pixel_count[3].ACLR
reset => ver_pixel_count[4].ACLR
reset => ver_pixel_count[5].ACLR
reset => ver_pixel_count[6].ACLR
reset => ver_pixel_count[7].ACLR
reset => ver_pixel_count[8].ACLR
reset => ver_pixel_count[9].ACLR
reset => ver_pixel_count[10].ACLR
reset => ver_pixel_count[11].ACLR
start => hor_pixel_count.OUTPUTSELECT
start => hor_pixel_count.OUTPUTSELECT
start => hor_pixel_count.OUTPUTSELECT
start => hor_pixel_count.OUTPUTSELECT
start => hor_pixel_count.OUTPUTSELECT
start => hor_pixel_count.OUTPUTSELECT
start => hor_pixel_count.OUTPUTSELECT
start => hor_pixel_count.OUTPUTSELECT
start => hor_pixel_count.OUTPUTSELECT
start => hor_pixel_count.OUTPUTSELECT
start => hor_pixel_count.OUTPUTSELECT
start => hor_pixel_count.OUTPUTSELECT
start => ver_pixel_count.OUTPUTSELECT
start => ver_pixel_count.OUTPUTSELECT
start => ver_pixel_count.OUTPUTSELECT
start => ver_pixel_count.OUTPUTSELECT
start => ver_pixel_count.OUTPUTSELECT
start => ver_pixel_count.OUTPUTSELECT
start => ver_pixel_count.OUTPUTSELECT
start => ver_pixel_count.OUTPUTSELECT
start => ver_pixel_count.OUTPUTSELECT
start => ver_pixel_count.OUTPUTSELECT
start => ver_pixel_count.OUTPUTSELECT
start => ver_pixel_count.OUTPUTSELECT
switch[0] => ~NO_FANOUT~
switch[1] => ~NO_FANOUT~
switch[2] => ~NO_FANOUT~
switch[3] => ~NO_FANOUT~
horizontal_sync <= horizontal_sync~reg0.DB_MAX_OUTPUT_PORT_TYPE
vertical_sync <= vertical_sync~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_enable <= hdmi_active.DB_MAX_OUTPUT_PORT_TYPE
pixel_clock <= clock_1080p.DB_MAX_OUTPUT_PORT_TYPE


